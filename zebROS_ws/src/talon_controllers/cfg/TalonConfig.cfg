#!/usr/bin/env python

PACKAGE='talon_controllers'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name                       Type      Reconfiguration-level  Description  Default  Min  Max
gen.add("p0",                      double_t, 0,                     "",          0,       0,   100)
gen.add("i0",                      double_t, 0,                     "",          0,       0,   100)
gen.add("d0",                      double_t, 0,                     "",          0,       0,   100)
gen.add("f0",                      double_t, 0,                     "",          0,       0,   100)
gen.add("izone0",                  double_t, 0,                     "",          0,       0,   100)

gen.add("p1",                      double_t, 0,                     "",          0,       0,   100)
gen.add("i1",                      double_t, 0,                     "",          0,       0,   100)
gen.add("d1",                      double_t, 0,                     "",          0,       0,   100)
gen.add("f1",                      double_t, 0,                     "",          0,       0,   100)
gen.add("izone1",                  double_t, 0,                     "",          0,       0,   100)

gen.add("invert_output",           bool_t,   0,                     "",          False)
gen.add("sensor_phase",            bool_t,   0,                     "",          False)

gen.add("ticks_per_rotation",	   int_t,	 0,						"",			 4000,	  0,   64000)

gen.add("closed_loop_ramp",        double_t, 0,                     "",          0,       0,   100)
gen.add("open_loop_ramp",          double_t, 0,                     "",          0,       0,   100)
gen.add("peak_output_forward",     double_t, 0,                     "",          0,       0,   100)
gen.add("peak_output_reverse",     double_t, 0,                     "",          0,       0,   100)
gen.add("nominal_output_forward",  double_t, 0,                     "",          0,       0,   100)
gen.add("nominal_output_reverse",  double_t, 0,                     "",          0,       0,   100)
gen.add("neutral_deadband",        double_t, 0,                     "",          0,       0,   100)

feedback_type_enum = gen.enum([ gen.const("Uninitialized",				int_t, 0,  ""),
								gen.const("QuadEncoder", 				int_t, 1,  ""),
								gen.const("Analog",						int_t, 2,  ""),
								gen.const("Tachometer",					int_t, 3,  ""),
								gen.const("PulseWidthEncodedPosition",	int_t, 4,  ""),
								gen.const("SensorSum",					int_t, 5,  ""),
								gen.const("SensorDifference",			int_t, 6,  ""),
								gen.const("Inertial",					int_t, 7,  ""),
								gen.const("RemoteSensor",				int_t, 8,  ""),
								gen.const("SoftwareEmulatedSensor",		int_t, 9,  ""),
								gen.const("CTRE_Magencoder_Absolute",	int_t, 4, ""),
								gen.const("CTRE_Magencoder_Relative",	int_t, 1, ""),
							], "")
gen.add("feedback_type", 		   int_t,    0,                     "",			0,		  0,   12, edit_method=feedback_type_enum)
exit(gen.generate(PACKAGE, "talon_reconfigure_node", "TalonConfig"))

